syntax = "proto3";

package wres.statistics.generated;

import "wresproto/geometry_tuple.proto";
import "wresproto/geometry_group.proto";
import "wresproto/time_window.proto";
import "wresproto/pairs.proto";
import "wresproto/threshold.proto";
import "wresproto/time_scale.proto";

option java_package = "wres.statistics.generated";
option java_outer_classname = "PoolProto";
option java_multiple_files = true;

message Pool
{
    /*A message that encapsulates a pool, which is the atomic collection of 
    pairs and statistics.*/
    
    repeated GeometryTuple geometry_tuples = 1 [deprecated = true];
    // Deprecated for removal. Use the geometry_group instead.
    // Zero or more geometry tuples that characterize this pool.
        
    TimeWindow time_window = 2;
    // The temporal boundaries of the pool.

    TimeScale time_scale = 3;
    // The time scale associated with the pairs and statistics in this pool.
    // In general, the time scale is fixed across all pools within an evaluation,
    // but it may not be known until pool creation time and, in principle, the 
    // time scale could vary between pools.

    Threshold event_threshold = 4;
    // Threshold used to define a partition of pairs or a categorical event.
        
    Threshold decision_threshold = 5;
    /*The threshold associated with a decision, such as the forecast probability 
    of flooding at which to issue a flood warning. This is used to transform 
    probabilistic dichotomous data to single-valued dichitomous data to which 
    dichotomous statistics may be applied, such as the equitable threat score.*/
    
    Pairs pairs = 6;
    // The paired values that form the pool.

    bool is_baseline_pool = 7;
    // Is true when the pool contains statistics for the baseline pairs *only*, 
    // false when it contains statistics for the right pairs, whether absolute 
    // statistics or statistics relative to a baseline (skill). When an 
    // evaluation contains the same metrics for both the right pairs and 
    // baseline pairs, this allows the resulting statistics to be discriminated 
    // between.

    string region_name = 8 [deprecated = true];
    // Deprecated for removal. Use the geometry_group instead.
    // The name of the spatial aggregation or geographic region associated with 
    // the geometries (e.g., Patagonia).

    int64 pool_id = 9;
    // A unique identifier for the pool.

    GeometryGroup geometry_group = 10;
    // The group of geometries associated with the pool.

    enum EnsembleAverageType
        {
        // The type of average used when forming a pool of ensemble averages.

        NONE = 0;
        // The pool was not formed using ensemble averages.
            
        MEAN = 1;
        // The pool was formed using ensemble mean values.

        MEDIAN = 2;
        // The pool was formed using ensemble median values.
    }

    EnsembleAverageType ensemble_average_type = 11;
    // The type of ensemble average used when forming a pool of ensemble averages
    // averages.
}