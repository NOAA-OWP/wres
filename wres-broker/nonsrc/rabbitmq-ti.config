[
    {
        ssl,
        [
            { versions, [ "tlsv1.3", "tlsv1.2" ] }
        ]
    },
    {
        rabbit,
        [
            { tcp_listeners, [] },
            { ssl_listeners, [ 5671 ] },
            {
                ssl_options,
                [
                    { versions, [ 'tlsv1.3', 'tlsv1.2' ] },
                    { cacertfile, "/wres_secrets/wres_ca_x509_cert.pem" },
                    { certfile, "/wres_secrets/***REMOVED***wres-broker-ti_server_x509_cert.pem" },
                    { keyfile, "/wres_secrets/***REMOVED***wres-broker-ti_server_private_rsa_key.pem" },
                    {
                        ciphers,
                        [
                            "ECDHE-ECDSA-AES128-GCM-SHA256",
                            "ECDHE-ECDSA-AES256-GCM-SHA384",
                            "ECDHE-ECDSA-AES128-SHA",
                            "ECDHE-ECDSA-AES256-SHA",
                            "ECDHE-ECDSA-AES128-SHA256",
                            "ECDHE-ECDSA-AES256-SHA384",
                            "ECDHE-RSA-AES128-GCM-SHA256",
                            "ECDHE-RSA-AES256-GCM-SHA384",
                            "ECDHE-RSA-AES128-SHA",
                            "ECDHE-RSA-AES256-SHA",
                            "ECDHE-RSA-AES128-SHA256",
                            "ECDHE-RSA-AES256-SHA384",
                            "DHE-RSA-AES128-GCM-SHA256",
                            "DHE-RSA-AES256-GCM-SHA384",
                            "DHE-RSA-AES128-SHA",
                            "DHE-RSA-AES256-SHA",
                            "DHE-RSA-AES128-SHA256",
                            "DHE-RSA-AES256-SHA256"
                        ]
                    },
                    { honor_cipher_order, true},
                    { verify, verify_peer },
                    { fail_if_no_peer_cert, true }
                ]
            },
            { auth_mechanisms, [ 'EXTERNAL' ] },
            { ssl_cert_login_from, common_name },
            { vm_memory_high_watermark, { absolute, "360M" } }
        ]
    },
    {
        rabbitmq_management,
        [
            {
                listener,
                [
                    { port, 15671 },
                    { ssl, true },
                    {
                        ssl_opts,
                        [
                            { versions, [ 'tlsv1.3', 'tlsv1.2' ] },
                            { cacertfile, "/wres_secrets/wres_ca_x509_cert.pem" },
                            { certfile, "/wres_secrets/***REMOVED***wres-broker-ti_server_x509_cert.pem" },
                            { keyfile, "/wres_secrets/***REMOVED***wres-broker-ti_server_private_rsa_key.pem" },
                            {
                                ciphers,
                                [
                                    "ECDHE-ECDSA-AES128-GCM-SHA256",
                                    "ECDHE-ECDSA-AES256-GCM-SHA384",
                                    "ECDHE-ECDSA-AES128-SHA",
                                    "ECDHE-ECDSA-AES256-SHA",
                                    "ECDHE-ECDSA-AES128-SHA256",
                                    "ECDHE-ECDSA-AES256-SHA384",
                                    "ECDHE-RSA-AES128-GCM-SHA256",
                                    "ECDHE-RSA-AES256-GCM-SHA384",
                                    "ECDHE-RSA-AES128-SHA",
                                    "ECDHE-RSA-AES256-SHA",
                                    "ECDHE-RSA-AES128-SHA256",
                                    "ECDHE-RSA-AES256-SHA384",
                                    "DHE-RSA-AES128-GCM-SHA256",
                                    "DHE-RSA-AES256-GCM-SHA384",
                                    "DHE-RSA-AES128-SHA",
                                    "DHE-RSA-AES256-SHA",
                                    "DHE-RSA-AES128-SHA256",
                                    "DHE-RSA-AES256-SHA256"
                                ]
                            },
                            { honor_cipher_order, true},
                            { verify, verify_peer },
                            { fail_if_no_peer_cert, true }
                        ]
                    }
                ]
            },
            { load_definitions, "/etc/rabbitmq/definitions.json" }
        ]
    }
].
