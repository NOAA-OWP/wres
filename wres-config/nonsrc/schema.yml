---
"$schema": http://json-schema.org/draft/2019-09/schema#
"$ref": "#/definitions/EvaluationDeclaration"
definitions:

  # The root node for an evaluation declaration
  EvaluationDeclaration:
    type: object
    additionalProperties: false
    properties:
      observed:
        anyOf:
          - "$ref": "#/definitions/ObservedOrPredicted"
          - type: array
            items: 
              type: string
              minLength: 1
              maxLength: 2083
            minItems: 1
      predicted:
        anyOf:
          - "$ref": "#/definitions/ObservedOrPredicted"
          - type: array
            items: 
              type: string
              minLength: 1
              maxLength: 2083
            minItems: 1
      baseline:
        anyOf:
          - "$ref": "#/definitions/Baseline"
          - type: array
            items: 
              type: string
              minLength: 1
              maxLength: 2083
            minItems: 1
      features:
        type: array
        items:
          "$ref": "#/definitions/Feature"
        uniqueItems: true
      feature_groups:
        type: array
        items:
          "$ref": "#/definitions/FeatureGroup"
        uniqueItems: true
      feature_service:
        "$ref": "#/definitions/FeatureService"
      spatial_mask:
        "$ref": "#/definitions/SpatialMask"
      reference_dates:
        "$ref": "#/definitions/Dates"
      reference_date_pools:
        "$ref": "#/definitions/TimePools"
      valid_dates:
        "$ref": "#/definitions/Dates"
      valid_date_pools:
        "$ref": "#/definitions/TimePools"
      lead_times:
        "$ref": "#/definitions/LeadTimes"
      lead_time_pools:
        "$ref": "#/definitions/TimePools"
      analysis_durations:
        "$ref": "#/definitions/AnalysisDurations"
      time_scale:
        "$ref": "#/definitions/TimeScale"
      rescale_lenience:
        "$ref": "#/definitions/TimeScaleLenienceEnum"
      unit:
        type: string
        minLength: 1
        maxLength: 2083
      unit_aliases:
        type: array
        items:
          "$ref": "#/definitions/UnitAlias"
        minItems: 1
      pair_frequency:
        "$ref": "#/definitions/PairFrequency"
      cross_pair:
        "$ref": "#/definitions/CrossPairEnum"
      ensemble_average:
        "$ref": "#/definitions/EnsembleAverageEnum"
      season:
        "$ref": "#/definitions/SeasonFilter"
      values:
        "$ref": "#/definitions/ValueFilter"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      classifier_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      value_thresholds:
        "$ref": "#/definitions/ValueThresholds"
      threshold_service:
        "$ref": "#/definitions/ThresholdService"
      threshold_sets:
        type: array
        items:
          "$ref": "#/definitions/ThresholdSet"
        minItems: 1
      minimum_sample_size:
        type: integer
        minimum: 1
      metrics:
        type: array
        items:
            # A simple name or a parameterized type
            anyOf:
              - "$ref": "#/definitions/MetricEnum"
              - "$ref": "#/definitions/CategoricalMetricEnum"
              - "$ref": "#/definitions/SingleValuedMetricEnum"
              - "$ref": "#/definitions/TimeSeriesMetricEnum"
              - "$ref": "#/definitions/MetricWithParameters"
              - "$ref": "#/definitions/CategoricalMetricWithParameters"
              - "$ref": "#/definitions/SingleValuedMetricWithParameters"
              - "$ref": "#/definitions/TimeSeriesMetricWithParameters"
        minItems: 1
        uniqueItems: true
      duration_format:
        "$ref": "#/definitions/DurationEnum"
      decimal_format:
        type: string
        minLength: 1
        maxLength: 2083
      output_formats:
        type: array
        items:
          # A simple name or a parameterized type
          anyOf:   
            - "$ref": "#/definitions/FormatEnum"
            - "$ref": "#/definitions/GraphicFormatEnum"
            - "$ref": "#/definitions/FormatWithParameters"
            - "$ref": "#/definitions/GraphicFormatWithParameters"
        minItems: 1
        uniqueItems: true
      # An optional label or name for the evaluation
      label:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - observed
      - predicted
    title: EvaluationDeclaration

  # The observed or predicted datasets
  ObservedOrPredicted:
    type: object
    additionalProperties: false
    properties:
      sources:
        type: array
        items:
          "$ref": "#/definitions/Source"
        minItems: 1
      variable:
        anyOf:
          - "$ref": "#/definitions/Variable"
          - type: string
      feature_authority:
        "$ref": "#/definitions/FeatureAuthorityEnum"
      type:
        "$ref": "#/definitions/DataTypeEnum"
      label:
        type: string
      ensemble_filter:
        anyOf:
          - "$ref": "#/definitions/EnsembleFilter"
          - type: array
            items:
              oneOf:
                - type: integer
                - type: string
                  minLength: 1
                  maxLength: 72
            minItems: 1
      time_shift:
        "$ref": "#/definitions/TimeShift"
      # Workaround because the networknt validator sometimes sees these 
      # strings as integers, but both are interpreted properly post-validation.
      # This property is also defined per source.
      time_zone_offset:
        anyOf:        
          - type: string
            minLength: 1
            maxLength: 6
          - type: integer
    required:
      - sources
    title: ObservedOrPredicted

  # Should be possible to re-use ObservedOrPredicted by adding an additional persistence
  # property within an allOf block, but this does not work in practice while
  # retaining additionalProperties: false to prevent unknown declaration, so
  # go ahead and allow the repetition/overlap with ObservedOrPredicted. Also does not
  # work when using unevaluatedProperties instead of additionalProperties.
  
  # The baseline-ish datasets
  Baseline:
    type: object
    additionalProperties: false
    properties:
      sources:
        type: array
        items:
          "$ref": "#/definitions/Source"
        minItems: 1
      feature_authority:
        "$ref": "#/definitions/FeatureAuthorityEnum"
      variable:
        anyOf:
          - "$ref": "#/definitions/Variable"
          - type: string
      label:
        type: string
        minLength: 1
        maxLength: 2083
      ensemble_filter:
        anyOf:
          - "$ref": "#/definitions/EnsembleFilter"
          - type: array
            items:
              oneOf:
                - type: integer
                - type: string
                  minLength: 1
                  maxLength: 72
            minItems: 1
      time_shift:
        "$ref": "#/definitions/TimeShift"
      persistence:
        type: integer
        minimum: 0
      separate_metrics:
        type: boolean
      type:
        "$ref": "#/definitions/DataTypeEnum"
    required:
      - sources
    title: Baseline

  # A data source, such as a file on a file system or a web service. A data 
  # source may be a plain uri without any label or a fully elaborated source.
  Source:
    anyOf:
      - "$ref": "#/definitions/SourceElement"
      - type: string
        minLength: 1
        maxLength: 2083
    title: Source

  # A fully elaborated data source
  SourceElement:
    type: object
    additionalProperties: false
    properties:
      uri:
        type: string
        minLength: 1
        maxLength: 2083
        # Avoid format: uri because local files would require file scheme.
        pattern: ^(?!\s*$).+
      pattern:
        type: string
        minLength: 1
        maxLength: 2083
      # Workaround because the networknt validator sometimes sees these 
      # strings as integers, but both are interpreted properly post-validation
      time_zone_offset:
        anyOf:        
          - type: string
            minLength: 1
            maxLength: 6
          - type: integer
      interface:
        "$ref": "#/definitions/SourceInterfaceEnum"
      # Parameters form a dictionary with any pair of strings allowed
      parameters:
        type: object
        additionalProperties:
          type: string
        minItems: 1
      time_scale:
        "$ref": "#/definitions/TimeScale"
      missing_value:
        type: number
    required:
      - uri
    title: SourceElement

  # A variable to evaluate
  Variable:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 2083
      label:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - name
    title: Variable

  # The time scale of a dataset or the evaluation.
  TimeScale:
    type: object
    additionalProperties: false
    properties:
      function:
        "$ref": "#/definitions/TimeScaleFunctionEnum"
      period:
        type: integer
        minimum: 1
      unit:
        "$ref": "#/definitions/DurationEnum"
      minimum_month:
        type: integer
        minimum: 1
        maximum: 12
      minimum_day:
        type: integer
        minimum: 1
        maximum: 31
      maximum_month:
        type: integer
        minimum: 1
        maximum: 12
      maximum_day:
        type: integer
        minimum: 1
        maximum: 31
      # Complex schema-level validation of the allowed combinations of above 
      # properties is possible - see #111987-70, for example - but the 
      # resulting validation does not produce intelligible errors, so a balance 
      # is needed between schema-level validation (fail early) and application-
      # level validation (fail later, but better).  
    required:
    - function
    title: TimeScale

  # A time shift to be applied to a dataset
  TimeShift:
    type: object
    additionalProperties: false
    properties:
      period:
        type: integer
      unit:
        "$ref": "#/definitions/DurationEnum"
    required:
      - period
      - unit
    title: TimeShift

  # A geospatial feature, composed of a simple name or a tuple of names.
  Feature:
    anyOf:
      - "$ref": "#/definitions/FeatureTuple"
      - type: string
        minLength: 1
        maxLength: 32
    title: Feature

  # A feature tuple
  FeatureTuple:
    type: object
    additionalProperties: false
    properties:
      observed:
        anyOf:
          - "$ref": "#/definitions/FeatureTupleFull"
          - type: string
            minLength: 1
            maxLength: 32
      predicted:
        anyOf:
          - "$ref": "#/definitions/FeatureTupleFull"
          - type: string
            minLength: 1
            maxLength: 32
      baseline:
        anyOf:
          - "$ref": "#/definitions/FeatureTupleFull"
          - type: string
            minLength: 1
            maxLength: 32
    title: FeatureTuple
  
  # A feature tuple with additional properties
  FeatureTupleFull:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 32
      wkt:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - name
    title: FeatureTupleFull

  # A group of feature tuples, such as all features within a geospatial region.
  FeatureGroup:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 98
      features:
        type: array
        items:
          "$ref": "#/definitions/Feature"
        uniqueItems: true
    required:
      - features
    title: FeatureGroup

  # A feature service from which feature tuples may be acquired.
  FeatureService:
    anyOf:
      - "$ref": "#/definitions/SingletonFeatureService"
      - "$ref": "#/definitions/MultiGroupFeatureService"

  # A feature service with up to one feature group.
  SingletonFeatureService:
    type: object
    additionalProperties: false
    properties:
      uri:
        type: string
        format: uri
        minLength: 1
        maxLength: 2083
      group:
        type: string
        minLength: 1
        maxLength: 2083
      value:
        type: string
        minLength: 1
        maxLength: 2083
      pool:
        type: boolean
    required:
      - uri
    title: SingletonFeatureService

  # A feature service with up to many feature groups.
  MultiGroupFeatureService:
    type: object
    additionalProperties: false
    properties:
      uri:
        type: string
        format: uri
        minLength: 1
        maxLength: 2083
      groups:
        type: array
        items:
          "$ref": "#/definitions/FeatureServiceGroup"
        minItems: 1
    required:
      - uri
    title: MultiGroupFeatureService

  # A key-value pair that represents a source interface parameter.
  SourceInterfaceParameter:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 2083
      value:
        type: string
        minLength: 1
        maxLength: 2083
    title: SourceInterfaceParameter

  # The declaration of a feature group to acquire from a feature service.
  FeatureServiceGroup:
    type: object
    additionalProperties: false
    properties:
      group:
        type: string
        minLength: 1
        maxLength: 2083
      value:
        type: string
        minLength: 1
        maxLength: 2083
      pool:
        type: boolean
    required:
      - group
      - value
    title: FeatureServiceGroup

  # A geospatial mask based on a WKT shape.
  SpatialMask:
    oneOf:
      - type: string
        minLength: 1
      - "$ref": "#/definitions/NamedSpatialMask"    

  # A geospatial mask based on a WKT shape and optional name.
  NamedSpatialMask:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 2083
      wkt:
        type: string
        minLength: 1
    required:
      - wkt
    title: NamedSpatialMask

  # The durations to consider when evaluating model analyses.
  AnalysisDurations:
    type: object
    additionalProperties: false
    properties:
      minimum_exclusive:
        type: integer
      maximum:
        type: integer
      unit:
        "$ref": "#/definitions/DurationEnum"
    required:
      - unit
    title: AnalysisDurations

  # The date constraints on an evaluation.
  Dates:
    type: object
    additionalProperties: false
    properties:
      minimum:
        type: string
        format: date-time
      maximum:
        type: string
        format: date-time
    required:
      - maximum
      - minimum
    title: Dates

  # The lead time constraints on an evaluation.
  LeadTimes:
    type: object
    additionalProperties: false
    properties:
      minimum:
        type: integer
      maximum:
        type: integer
      unit:
        "$ref": "#/definitions/DurationEnum"
    title: LeadTimes

  # The declaration of a regular sequence of time pools. Each pool contains an 
  # interval of times whose corresponding pairs will be pooled together when 
  # calculating statistics. The regular sequence contains pools that are as 
  # wide as the period and as frequent as the frequency, both in the same time 
  # units, which are prescribed.
  TimePools:
    type: object
    additionalProperties: false
    properties:
      period:
        type: integer
        minimum: 0
      frequency:
        type: integer
        minimum: 1
      unit:
        "$ref": "#/definitions/DurationEnum"
    required:
      - period
      - unit
    title: TimePools

  # A filter to only include pairs whose valid times fall within a prescribed 
  # season.
  SeasonFilter:
    type: object
    additionalProperties: false
    properties:
      minimum_month:
        type: integer
        minimum: 1
        maximum: 12
      minimum_day:
        type: integer
        minimum: 1
        maximum: 31
      maximum_month:
        type: integer
        minimum: 1
        maximum: 12
      maximum_day:
        type: integer
        minimum: 1
        maximum: 31
    title: SeasonFilter

  # A filter to include only those paired values that fall between a minimum 
  # and a maximum.
  ValueFilter:
    type: object
    additionalProperties: false
    properties:
      minimum:
        type: number
      maximum:
        type: number
      below_minimum:
        type: number
      above_maximum:
        type: number
    required:
    title: ValueFilter

  # A filter on the ensemble member names to consider when evaluating an 
  # ensemble time-series whose individual traces or members are named.
  EnsembleFilter:
    type: object
    additionalProperties: false
    properties:
      members:
        type: array
        items:
          anyOf:
            - type: string
              minLength: 1
              maxLength: 72
            - type: integer
        minItems: 1
      exclude:
        type: boolean
    required:
      - members
    title: EnsembleFilter

  # The frequency with which pairs should be included. Use this to "thin" the 
  # paired data in time.
  PairFrequency:
    type: object
    additionalProperties: false
    properties:
      period:
        type: integer
        minimum: 1
      unit:
        "$ref": "#/definitions/DurationEnum"
    required:
      - period
      - unit
    title: PairFrequency

  # A mapping between known UCUM units and informal unit names.
  UnitAlias:
    type: object
    additionalProperties: false
    properties:
      unit:
        type: string
        minLength: 1
        maxLength: 2083
      alias:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - alias
      - unit
    title: UnitAlias

  # A single set of value thresholds
  ValueThresholds:
    anyOf:
      # Thresholds with attributes
      - "$ref": "#/definitions/ElaboratedValueThresholds"
      # A list of thresholds with attributes
      - type: array
        items:
          "$ref": "#/definitions/ElaboratedValueThresholds"
        minItems: 1
      # Plain thresholds
      - type: array
        items:
          type: number
        minItems: 1
    required:
    title: ValueThresholds

  # A single set of value thresholds with additional attributes
  ElaboratedValueThresholds:
    type: object
    additionalProperties: false
    properties:
      values:
        type: array
        items:
          "$ref": "#/definitions/ValueThreshold"
        minItems: 1
      operator:
        "$ref": "#/definitions/ThresholdOperatorEnum"
      apply_to:
        "$ref": "#/definitions/ThresholdDataTypeEnum"
      feature_name_from:
        "$ref": "#/definitions/ObservedPredictedOrBaselineEnum"
      name:
        type: string
        minLength: 1
        maxLength: 2083
      unit:
        type: string
    required:
      - values
    title: ElaboratedValueThresholds

  # A value threshold
  ValueThreshold:
    anyOf:
      # A value threshold with a feature
      - "$ref": "#/definitions/FeaturedValueThreshold"
      # A plain value threshold
      - type: number
    title: ValueThreshold

  # A value threshold with an optional feature
  FeaturedValueThreshold:
    type: object
    additionalProperties: false
    properties:
      value:
        type: number
      feature:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - value
    title: FeaturedValueThreshold

  # A single set of probability thresholds
  ProbabilityThresholds:
    anyOf:
      # Thresholds with attributes
      - "$ref": "#/definitions/ElaboratedProbabilityThresholds"
      # A list of thresholds with attributes
      - type: array
        items:
          "$ref": "#/definitions/ElaboratedProbabilityThresholds"
        minItems: 1
      # Plain thresholds
      - type: array
        items:
          type: number
          minimum: 0.0
          maximum: 1.0
        minItems: 1
    required:
    title: ProbabilityThresholds

  # A single set of probability thresholds with additional attributes
  ElaboratedProbabilityThresholds:
    type: object
    additionalProperties: false
    properties:
      values:
        type: array
        items:
          "$ref": "#/definitions/ProbabilityThreshold"
        minItems: 1
      operator:
        "$ref": "#/definitions/ThresholdOperatorEnum"
      apply_to:
        "$ref": "#/definitions/ThresholdDataTypeEnum"
      feature_name_from:
        "$ref": "#/definitions/ObservedPredictedOrBaselineEnum"
      name:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - values
    title: ElaboratedProbabilityThresholds

  # A probability threshold
  ProbabilityThreshold:
    anyOf:
      # A probability threshold with a feature
      - "$ref": "#/definitions/FeaturedProbabilityThreshold"
      # A plain probability threshold
      - type: number
        minimum: 0
        maximum: 1.0
    title: ProbabilityThreshold

  # A probability threshold with an optional feature
  FeaturedProbabilityThreshold:
    type: object
    additionalProperties: false
    properties:
      value:
        type: number
        minimum: 0.0
        maximum: 1.0
      feature:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - value
    title: FeaturedProbabilityThreshold

  # A list of threshold sets to be used for the most complex thresholding 
  # problems whereby multiple thresholds of the same type are required in 
  # a single evaluation and different sets of thresholds are required for
  # different metrics. In this situation, threshold sets provide a hook 
  # for anchors and aliases so that thresholds don't need to be repeated
  # for every metric that requires a common subset of thresholds.
  ThresholdSet:
    type: object
    additionalProperties: false
    properties:
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      classifier_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      value_thresholds:
        "$ref": "#/definitions/ValueThresholds"
    title: ThresholdSet

  # A service from which to acquire threshold values.
  ThresholdService:
    type: object
    additionalProperties: false
    properties:
      uri:
        type: string
        minLength: 1
        maxLength: 2083
      operator:
        "$ref": "#/definitions/ThresholdOperatorEnum"
      apply_to:
        "$ref": "#/definitions/ThresholdDataTypeEnum"
      type:
        "$ref": "#/definitions/ThresholdTypeEnum"
      provider:
        type: string
        minLength: 1
        maxLength: 2083
      rating_provider:
        type: string
        minLength: 1
        maxLength: 2083
      parameter:
        type: string
        minLength: 1
        maxLength: 2083
      missing_value:
        type: number
      unit:
        type: string
        minLength: 1
        maxLength: 2083
      feature_name_from:
        "$ref": "#/definitions/ObservedPredictedOrBaselineEnum"
    required:
      - uri
    title: ThresholdService

  # A parameterized metric.
  MetricWithParameters:
    type: object
    additionalProperties: false
    properties:
      name:
        "$ref": "#/definitions/MetricEnum"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      value_thresholds:
        "$ref": "#/definitions/ValueThresholds"
      svg:
        type: boolean
      png:
        type: boolean
    required:
      - name
    title: MetricWithParameters

  # A parameterized categorical metric.
  CategoricalMetricWithParameters:
    type: object
    additionalProperties: false
    properties:
      name:
        "$ref": "#/definitions/CategoricalMetricEnum"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      value_thresholds:
        "$ref": "#/definitions/ValueThresholds"
      classifier_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      minimum_sample_size:
        type: integer
        minimum: 1
      ensemble_average:
        "$ref": "#/definitions/EnsembleAverageEnum"
      svg:
        type: boolean
      png:
        type: boolean
    required:
      - name
    title: CategoricalMetricWithParameters

  # A parameterized single-valued metric.
  SingleValuedMetricWithParameters:
    type: object
    additionalProperties: false
    properties:
      name:
        "$ref": "#/definitions/SingleValuedMetricEnum"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      value_thresholds:
        "$ref": "#/definitions/ValueThresholds"
      minimum_sample_size:
        type: integer
        minimum: 1
      ensemble_average:
        "$ref": "#/definitions/EnsembleAverageEnum"
      svg:
        type: boolean
      png:
        type: boolean
    required:
      - name
    title: SingleValuedMetricWithParameters

  # A parameterized time-series metric.
  TimeSeriesMetricWithParameters:
    type: object
    additionalProperties: false
    properties:
      name:
        "$ref": "#/definitions/TimeSeriesMetricEnum"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      value_thresholds:
        "$ref": "#/definitions/Thresholds"
      minimum_sample_size:
        type: integer
      summary_statistics:
        type: array
        items:
          "$ref": "#/definitions/SummaryStatisticsEnum"
        minItems: 1
    required:
      - name
    title: TimeSeriesMetricWithParameters

  # Format. A facade to allow the same declaration across
  # all types of format. For example, format: csv2
  FormatWithParameters:
    type: object
    additionalProperties: false
    properties:
      format:
        "$ref": "#/definitions/FormatEnum"
    required:
      - format
    title: FormatWithParameters

  # Graphic format.
  GraphicFormatWithParameters:
    type: object
    additionalProperties: false
    properties:
      format:
        "$ref": "#/definitions/GraphicFormatEnum"
      orientation:
        "$ref": "#/definitions/OrientationEnum"
      # Both rasters and vectors can have width/height
      width:
        type: integer
        minimum: 400
      height:
        type: integer
        minimum: 300
    required:
      - format
    title: GraphicFormatWithParameters

  DurationEnum:
    type: string
    enum:
      - seconds
      - minutes
      - hours
      - days
    title: DurationEnum

  SourceInterfaceEnum:
    type: string
    enum:
      - wrds ahps
      - wrds obs
      - wrds nwm
      - usgs nwis
      - nwm short range channel rt conus
      - nwm short range channel rt hawaii
      - nwm short range no da channel rt hawaii
      - nwm short range channel rt puertorico
      - nwm short range no da channel rt puertorico
      - nwm medium range ensemble channel rt conus
      - nwm medium range deterministic channel rt conus
      - nwm medium range ensemble channel rt conus hourly
      - nwm medium range deterministic channel rt conus hourly
      - nwm medium range no da deterministic channel rt conus
      - nwm analysis assim channel rt conus
      - nwm analysis assim no da channel rt conus
      - nwm analysis assim extend channel rt conus
      - nwm analysis assim extend no da channel rt conus
      - nwm analysis assim channel rt hawaii
      - nwm analysis assim no da channel rt hawaii
      - nwm analysis assim channel rt puertorico
      - nwm analysis assim no da channel rt puertorico
      - nwm long range channel rt conus
    title: SourceInterfaceEnum

  FeatureAuthorityEnum:
    type: string
    enum:
      - nws lid
      - usgs site code
      - nwm feature id
      - custom
    title: FeatureAuthorityEnum

  ObservedPredictedOrBaselineEnum:
    type: string
    enum:
      - observed
      - predicted
      - baseline
    title: ObservedPredictedOrBaselineEnum

  TimeScaleFunctionEnum:
    type: string
    enum:
      - total
      - mean
      - minimum
      - maximum
    title: TimeScaleFunctionEnum

  TimeScaleLenienceEnum:
    type: string
    enum:
      - all
      - none
      - observed
      - predicted
      - baseline
      - predicted and baseline
      - observed and baseline
      - observed and predicted
    title: TimeScaleLenienceEnum

  CrossPairEnum:
    type: string
    enum:
      - exact
      - fuzzy
    title: CrossPairEnum

  EnsembleAverageEnum:
    type: string
    enum:
      - mean
      - median
    title: EnsembleAverageEnum

  # A big bucket of metrics that all accept the same parameters
  MetricEnum:
    type: string
    enum:
      - box plot of errors by observed value
      - box plot of errors by forecast value
      - brier score
      - brier skill score
      - contingency table
      - continuous ranked probability score
      - continuous ranked probability skill score
      - ensemble quantile quantile diagram
      - maximum
      - mean
      - minimum
      - rank histogram
      - relative operating characteristic diagram
      - relative operating characteristic score
      - reliability diagram
      - sample size
      - standard deviation
    title: MetricEnum

  # Time-series metrics
  TimeSeriesMetricEnum:
    type: string
    enum:
      - time to peak relative error
      - time to peak error
    title: TimeSeriesMetricEnum

  # Categorical metrics
  CategoricalMetricEnum:
    type: string
    enum:
      - contingency table
      - threat score
      - equitable threat score
      - frequency bias
      - probability of detection
      - probability of false detection
      - false alarm ratio
      - peirce skill score
    title: CategoricalMetricEnum

  # Single-valued metrics
  SingleValuedMetricEnum:
    type: string
    enum:
      - bias fraction
      - box plot of errors
      - box plot of percentage errors
      - coefficient of determination
      - pearson correlation coefficient
      - index of agreement
      - kling gupta efficiency
      - mean absolute error
      - mean error
      - mean square error
      - mean square error skill score
      - mean square error skill score normalized
      - median error
      - quantile quantile diagram
      - root mean square error
      - root mean square error normalized
      - sample size
      - sum of square error
      - volumetric efficiency
      - mean absolute error skill score
    title: SingleValuedMetricEnum

  FormatEnum:
    type: string
    enum:
      - csv
      - csv2
      - png
      - svg
      - netcdf
      - netcdf2
      - pairs
      - protobuf
    title: FormatEnum

  GraphicFormatEnum:
    type: string
    enum:
      - png
      - svg
    title: GraphicFormatEnum

  OrientationEnum:
    type: string
    enum:
      - lead threshold
      - threshold lead
    title: OrientationEnum

  SummaryStatisticsEnum:
    type: string
    enum:
      - mean
      - median
      - minimum
      - maximum
      - standard deviation
      - mean absolute
    title: SummaryStatisticsEnum

  ThresholdDataTypeEnum:
    type: string
    enum:
      - observed
      - predicted
      - observed and predicted
      - any predicted
      - observed and any predicted
      - predicted mean
      - observed and predicted mean
    title: ThresholdDataTypeEnum

  ThresholdTypeEnum:
    type: string
    enum:
      - probability
      - value
      - classifier
    title: ThresholdTypeEnum

  ThresholdOperatorEnum:
    type: string
    enum:
      - equal
      - greater
      - greater equal
      - less
      - less equal
    title: ThresholdOperatorEnum

  DataTypeEnum:
    type: string
    enum:
      - ensemble forecasts
      - single valued forecasts
      - observations
      - simulations
      - analyses
    title: DataTypeEnum
