---
"$schema": http://json-schema.org/draft/2019-09/schema#
"$ref": "#/definitions/EvaluationDeclaration"
definitions:
  EvaluationDeclaration:
    title: An evaluation declaration.
    description: "A complete description of an evaluation, including the 
    datasets to read, filters to apply to the data, how to group or 'pool' the 
    data, the metrics to calculate and the formats to write, among others."
    type: object
    additionalProperties: false
    properties:
      observed:
        description: "The 'observed' dataset or 'left' side of a pairing 
        generally contains the 'truth' or reference against which the 
        predictions will be evaluated. However, the naming of this and other 
        datasets is mainly intended to guide users with respect to the majority 
        use case of comparing predictions and observations. The content of the 
        datasets is not otherwise important. For example, time-series that 
        conceptually represent 'observations' can be compared to other 
        time-series that represent 'observations' by placing one of these 
        datasets in the 'predicted' position. However, as of v6.14, ensemble 
        forecasts cannot be declared with an 'observed' orientation. 
        Furthermore, there in an ordering of datasets, which is important for 
        interpreting statistics produced by the software. In particular, when 
        computing an 'error', the 'observed' value is always subtracted from 
        its corresponding (paired) 'predicted' value. Thus,negative errors 
        should be interpreted as 'under-prediction' insofar as the 'predicted' 
        dataset contains predictions."
        anyOf:
          - "$ref": "#/definitions/ObservedOrPredicted"
          - type: array
            items:
              type: string
              minLength: 1
              maxLength: 2083
            minItems: 1
          - type: string
            minLength: 1
            maxLength: 2083
          # To support data direct
          - type: "null"
      predicted:
        description: "The 'predicted' or 'right' data generally contains the 
        predictions to evaluate."
        anyOf:
          - "$ref": "#/definitions/ObservedOrPredicted"
          - type: array
            items:
              type: string
              minLength: 1
              maxLength: 2083
            minItems: 1
          - type: string
            minLength: 1
            maxLength: 2083
          # To support data direct
          - type: "null"
      baseline:
        description: "The 'baseline' dataset contains the baseline against 
        which the predictions will be compared when calculating skill scores."
        anyOf:
          - "$ref": "#/definitions/Baseline"
          - type: array
            items:
              type: string
              minLength: 1
              maxLength: 2083
            minItems: 1
          - type: string
            minLength: 1
            maxLength: 2083
          # To support data direct
          - type: "null"
      features:
        type: array
        items:
          "$ref": "#/definitions/Feature"
        uniqueItems: true
      feature_groups:
        type: array
        items:
          "$ref": "#/definitions/FeatureGroup"
        uniqueItems: true
      feature_service:
        anyOf:
          - "$ref": "#/definitions/FeatureService"
          - type: string
            minLength: 1
            maxLength: 2083
      spatial_mask:
        "$ref": "#/definitions/SpatialMask"
      reference_dates:
        "$ref": "#/definitions/Dates"
      reference_date_pools:
        "$ref": "#/definitions/TimePools"
      valid_dates:
        "$ref": "#/definitions/Dates"
      valid_date_pools:
        "$ref": "#/definitions/TimePools"
      lead_times:
        "$ref": "#/definitions/LeadTimes"
      lead_time_pools:
        "$ref": "#/definitions/TimePools"
      analysis_times:
        "$ref": "#/definitions/AnalysisTimes"
      time_scale:
        description: "The time-scale in this context is the time-scale at which 
        pairs should be created."
        "$ref": "#/definitions/TimeScale"
      rescale_lenience:
        "$ref": "#/definitions/TimeScaleLenienceEnum"
      unit:
        type: string
        minLength: 1
        maxLength: 2083
      unit_aliases:
        anyOf:
          # One or more
          - type: array
            items:
              "$ref": "#/definitions/UnitAlias"
            minItems: 1
          # Singleton
          - "$ref": "#/definitions/UnitAlias"
      pair_frequency:
        "$ref": "#/definitions/PairFrequency"
      cross_pair:
        "$ref": "#/definitions/CrossPair"
      ensemble_average:
        "$ref": "#/definitions/EnsembleAverageEnum"
      season:
        "$ref": "#/definitions/SeasonFilter"
      values:
        "$ref": "#/definitions/ValueFilter"
      thresholds:
        "$ref": "#/definitions/Thresholds"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      classifier_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      threshold_sources:
        anyOf:
          # One or more
          - type: array
            items:
              anyOf:
                - "$ref": "#/definitions/ThresholdSource"
                - type: string
                  minLength: 1
                  maxLength: 2083
            minItems: 1
            uniqueItems: true
          # Singleton
          - "$ref": "#/definitions/ThresholdSource"
          # URI only
          - type: string
            minLength: 1
            maxLength: 2083
      threshold_sets:
        type: array
        items:
          "$ref": "#/definitions/ThresholdSet"
        minItems: 1
      minimum_sample_size:
        description: "Declares the minimum number of samples for which a 
        statistic will be computed. For measures on continuous variables, such 
        as the mean error, the minimum sample size corresponds to the number of 
        pairs. For single-valued measures on dichotomous variables, such as the 
        probability of detection, it corresponds to the smallest of the number 
        of occurrences and non-occurrences on the left/observed side of the 
        pairs. For probabilistic measures on dichotomous variables, such as the 
        Brier Score, it corresponds to the smallest of the number of 
        occurrences and non-occurrences on the left/observed side of the pairs, 
        as represented by a probability of 1.0 and 0.0, respectively."
        type: integer
        minimum: 1
      sampling_uncertainty:
        "$ref": "#/definitions/SamplingUncertainty"
      metrics:
        anyOf:
          # Singleton without parameters
          - "$ref": "#/definitions/MetricEnum"
          - "$ref": "#/definitions/CategoricalMetricEnum"
          - "$ref": "#/definitions/SingleValuedMetricEnum"
          - "$ref": "#/definitions/TimeSeriesMetricEnum"
          # Tuple
          - type: array
            items:
              # A simple name or a parameterized type
              anyOf:
                - "$ref": "#/definitions/MetricEnum"
                - "$ref": "#/definitions/CategoricalMetricEnum"
                - "$ref": "#/definitions/SingleValuedMetricEnum"
                - "$ref": "#/definitions/TimeSeriesMetricEnum"
                - "$ref": "#/definitions/MetricWithParameters"
                - "$ref": "#/definitions/CategoricalMetricWithParameters"
                - "$ref": "#/definitions/SingleValuedMetricWithParameters"
                - "$ref": "#/definitions/TimeSeriesMetricWithParameters"
            minItems: 1
            uniqueItems: true
      summary_statistics:
        anyOf:
          - "$ref": "#/definitions/SummaryStatistics"
          - "$ref": "#/definitions/SummaryStatisticsWithDimensions"
      duration_format:
        "$ref": "#/definitions/DurationEnum"
      decimal_format:
        type: string
        minLength: 1
        maxLength: 2083
      output_formats:
        anyOf:
          # Singleton without parameters
          - "$ref": "#/definitions/FormatEnum"
          # Tuple of formats
          - type: array
            items:
              # A simple name or a parameterized type
              anyOf:
                - "$ref": "#/definitions/FormatEnum"
                - "$ref": "#/definitions/GraphicFormatEnum"
                - "$ref": "#/definitions/FormatWithoutParameters"
                - "$ref": "#/definitions/GraphicFormatWithParameters"
                - "$ref": "#/definitions/NetcdfFormatWithParameters"
            minItems: 1
            uniqueItems: true
      # An optional label or name for the evaluation
      label:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - observed
      - predicted

  # The observed or predicted datasets
  ObservedOrPredicted:
    title: Observed or predicted dataset.
    type: object
    additionalProperties: false
    properties:
      sources:
        anyOf:
          - "$ref": "#/definitions/Source"
          # No minimum array size because data posting allows for zero declared
          # sources.
          - type: array
            items:
              "$ref": "#/definitions/Source"
          - type: string
            minLength: 1
            maxLength: 2083
          # To support data direct
          - type: "null"
      variable:
        anyOf:
          - "$ref": "#/definitions/Variable"
          - type: string
      feature_authority:
        "$ref": "#/definitions/FeatureAuthorityEnum"
      type:
        "$ref": "#/definitions/DataTypeEnum"
      label:
        type: string
      ensemble_filter:
        anyOf:
          - "$ref": "#/definitions/EnsembleFilter"
          - type: array
            items:
              oneOf:
                - type: integer
                - type: string
                  minLength: 1
                  maxLength: 72
            minItems: 1
          - type: integer
          - type: string
            minLength: 1
            maxLength: 72
      time_shift:
        "$ref": "#/definitions/TimeShift"
      time_scale:
        "$ref": "#/definitions/TimeScale"
      # Workaround because the networknt validator sometimes sees these 
      # strings as integers, but both are interpreted properly post-validation.
      # This property is also defined per source.
      time_zone_offset:
        anyOf:
          - type: string
            minLength: 1
            maxLength: 6
          - type: integer

  # Should be possible to re-use ObservedOrPredicted by adding a persistence
  # property within an allOf block, but this does not work in practice while
  # retaining additionalProperties: false to prevent unknown declaration, so
  # go ahead and allow the repetition/overlap with ObservedOrPredicted. Also
  # does not work when using unevaluatedProperties instead of
  # additionalProperties.
  
  # The baseline-ish datasets
  Baseline:
    title: Baseline dataset
    type: object
    additionalProperties: false
    properties:
      sources:
        anyOf:
          - "$ref": "#/definitions/Source"
          # No minimum array size because data posting allows for zero declared
          # sources.
          - type: array
            items:
              "$ref": "#/definitions/Source"
          - type: string
            minLength: 1
            maxLength: 2083
          # To support data direct
          - type: "null"
      feature_authority:
        "$ref": "#/definitions/FeatureAuthorityEnum"
      variable:
        anyOf:
          - "$ref": "#/definitions/Variable"
          - type: string
      label:
        type: string
        minLength: 1
        maxLength: 2083
      ensemble_filter:
        anyOf:
          - "$ref": "#/definitions/EnsembleFilter"
          - type: array
            items:
              oneOf:
                - type: integer
                - type: string
                  minLength: 1
                  maxLength: 72
            minItems: 1
      time_shift:
        "$ref": "#/definitions/TimeShift"
      time_scale:
        "$ref": "#/definitions/TimeScale"
      # Workaround because the networknt validator sometimes sees these strings
      # as integers, but both are interpreted properly post-validation. This
      # property is also defined per source.
      time_zone_offset:
        anyOf:
          - type: string
            minLength: 1
            maxLength: 6
          - type: integer
      method:
        anyOf:
          - "$ref": "#/definitions/GeneratedBaselineEnum"
          - "$ref": "#/definitions/Persistence"
          - "$ref": "#/definitions/Climatology"
      separate_metrics:
        description: "When declaring separate_metrics as 'true', all possible 
        metrics will be computed for the baseline pairs, as well as the 
        predicted pairs. All possible metrics include skill scores that have a 
        default baseline, such as climatology. For skill scores that do not 
        have a default baseline, statistics will only be computed for the pairs 
        of observed and predicted values, not for the pairs of observed and 
        baseline values."
        type: boolean
      type:
        "$ref": "#/definitions/DataTypeEnum"

  Persistence:
    title: A persistence baseline
    description: "Creates a baseline by persisting each source forwards in time 
    with a specified order or 'lag', which must be greater than or equal to 
    zero. For non-forecast sources, the lag is applied to the valid time. For 
    example, a lag of 1 means that the persisted value is the value from the 
    persistence source that is one time step prior to the current valid time. 
    For a forecast source, the lag is applied to the forecast reference time, 
    or the first reference time if there are many. In this context, a lag of 3 
    means that the persisted value at all forecast valid times is the value 
    from the persistence source that is 3 steps prior to the forecast reference 
    time."
    type: object
    additionalProperties: false
    properties:
      name:
        const: "persistence"
      order:
        type: integer
        minimum: 0
    required:
      - name

  Climatology:
    title: A climatology baseline
    description: "Creates a baseline for a given valid time by collecting a 
    value at the same time from every historical year of record other than the 
    year of the given valid time. This is equivalent to the 'Ensemble Streamflow 
    Prediction' method used by the U.S. National Weather Service, but omits 
    the 'verifying observation' when the requested valid time(s) overlap the 
    valid time(s) in the source data."
    type: object
    additionalProperties: false
    properties:
      name:
        const: "climatology"
      minimum_date:
        type: string
        format: date-time
      maximum_date:
        type: string
        format: date-time
      average:
        "$ref": "#/definitions/EnsembleAverageEnum"
    required:
      - name

  Source:
    title: A data source.
    description: "Provides details about the source of the data. The text value 
    or URI specifies an individual file to read (absolute path or a path 
    relative to the installation); a directory to process (it is scanned 
    recursively and all files read unless the pattern is set; see below); or a 
    URL (if the source is a web service)."
    anyOf:
      - "$ref": "#/definitions/SourceElement"
      - type: string
        minLength: 1
        maxLength: 2083

  SourceElement:
    title: A fully elaborated data source.
    type: object
    additionalProperties: false
    properties:
      uri:
        type: string
        minLength: 1
        maxLength: 2083
        # Avoid uri type because local files would require file scheme.
        pattern: ^(?!\s*$).+
      pattern:
        description: "See: https://en.wikipedia.org/wiki/Glob_(programming). A 
        GLOB string specifies a pattern that restricts files read to only those 
        matching the pattern. For example, '**/*.xml' will match any XML file. 
        Note that the '**/' at the beginning is required."
        type: string
        minLength: 1
        maxLength: 2083
      time_zone_offset:
        description: "Specifies the time zone offset for the data. This is 
        required for the datacard format, which does not include time zone 
        information in the file. For example, datacard data from ABRFC may 
        including a time_zone_offset of 'CST'. It should be unnecessary for 
        most/all other formats."
        anyOf:
          # Allowing both an integer and a string is a workaround because the
          # networknt validator sometimes sees these strings as integers, but
          # both are interpreted properly post-validation
          - type: string
            minLength: 1
            maxLength: 6
          - type: integer
      interface:
        "$ref": "#/definitions/SourceInterfaceEnum"
      # Parameters form a dictionary with any pair of strings allowed
      parameters:
        type: object
        additionalProperties:
          type: string
        minItems: 1
      missing_value:
        anyOf:
          - type: array
            items:
              type: number
            uniqueItems: true
          - type: number
    required:
      - uri

  Variable:
    title: A variable to evaluate.
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 2083
      label:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - name

  TimeScale:
    title: The time-scale of a dataset or the evaluation
    description: "Describes the time-scale of a measurement within a 
    time-series. The time-scale includes a function that integrates the 
    measurement over a prescribed period, in prescribed time units. Optionally, 
    the time scale may represent a period bounded by a minimum monthday or a 
    maximum monthday or a pair of monthdays, representing the lower and upper 
    bookends of the period, such as 1 April through 31 July. The period cannot 
    be declared when both bookends are present. The low bookend begins at the 
    start of the day (0Z) and the high bookend finishes at the end of the day 
    (one instant before 0Z of the next day). Otherwise, a rescaled period spans 
    a right-closed interval that ends at (and includes) a particular valid 
    time."
    type: object
    additionalProperties: false
    properties:
      function:
        "$ref": "#/definitions/TimeScaleFunctionEnum"
      period:
        type: integer
        minimum: 1
      unit:
        "$ref": "#/definitions/DurationEnum"
      minimum_month:
        type: integer
        minimum: 1
        maximum: 12
      minimum_day:
        type: integer
        minimum: 1
        maximum: 31
      maximum_month:
        type: integer
        minimum: 1
        maximum: 12
      maximum_day:
        type: integer
        minimum: 1
        maximum: 31
    dependentRequired:
      period:
        - unit
      minimum_month:
        - minimum_day
      maximum_month:
        - maximum_day
      minimum_day:
        - minimum_month
      maximum_day:
        - maximum_month

  TimeShift:
    title: A timeshift to apply to a dataset.
    description: " Can be used to manually time-shift the data read from the 
    source, which may assist with pairing. For example, with the period set '-2' 
    and a unit set to 'hours', two hours will be subtracted from the valid 
    times in all time-series covered by this declaration."
    type: object
    additionalProperties: false
    properties:
      period:
        type: integer
      unit:
        "$ref": "#/definitions/DurationEnum"
    required:
      - period
      - unit

  CrossPair:
    title: Cross-pairing of time-series for consistency
    description: "Applies cross-pairing to the time-series within an evaluation
    to ensure that the same reference times and valid times are present across
    some or all of the datasets within the evaluation, depending on the type of 
    cross-pairing chosen."
    anyOf:
      - "$ref": "#/definitions/CrossPairEnum"
      - "$ref": "#/definitions/CrossPairFull"

  CrossPairFull:
    type: object
    additionalProperties: false
    properties:
      method:
        "$ref": "#/definitions/CrossPairEnum"
      scope:
        "$ref": "#/definitions/CrossPairScopeEnum"
    required:
      - method

  SummaryStatistics:
    title: Summary statistics to calculate.
    description: "Declares a list of summary statistics to calculate."
    type: array
    items:
      anyOf:
        - "$ref": "#/definitions/SummaryStatisticsEnum"
        - "$ref": "#/definitions/SummaryStatisticsWithParametersEnum"
        - "$ref": "#/definitions/Histogram"
        - "$ref": "#/definitions/Quantiles"
    minItems: 1
    uniqueItems: true
  
  SummaryStatisticsWithDimensions:
    title: Summary statistics to calculate for one or more explicit dimensions.
    description: "Declares the summary statistics to calculate for one or more 
    named dimensions, such as features or feature groups."
    type: object
    additionalProperties: false
    properties:
      dimensions:
        type: array
        items:
          - "$ref": "#/definitions/SummaryStatisticDimensionsEnum"
        minItems: 1
        uniqueItems: true
      statistics:
        "$ref": "#/definitions/SummaryStatistics"
    required:
      - statistics

  SamplingUncertainty:
    title: Sampling uncertainty estimation.
    description: "Declares the need to estimate the sampling uncertainty of the 
    verification statistics using the stationary bootstrap. Requires a sample 
    size and, optionally, a set of quantiles, otherwise defaults are chosen."
    type: object
    additionalProperties: false
    properties:
      sample_size:
        type: integer
        minimum: 1
      quantiles:
        "$ref": "#/definitions/QuantilesList"
    required:
      - sample_size

  QuantilesList:
    title: A list of quantiles from a probability distribution.
    description: "A list of probabilities that correspond to quantiles from a 
    probability distribution."
    type: array
    items:
      type: number
      minimum: 0.0
      maximum: 1.0
      uniqueItems: true
      minItems: 1

  Feature:
    title: A geospatial feature.
    description: "A geospatial feature, composed of a simple name or a tuple of 
    names."
    anyOf:
      - "$ref": "#/definitions/FeatureTuple"
      - type: string
        minLength: 1
        maxLength: 32

  FeatureTuple:
    title: A tuple of geospatial feature names
    description: "A tuple of geospatial feature names, each one corresponding 
    to a particular dataset orientation (observed/left, predicted/right or 
    baseline). This is necessary because each dataset may use a different 
    feature authority and, therefore, name the same conceptual features in 
    different ways. It is also possible to pair data from distinct conceptual 
    features. The name in a dataset may be an arbitrary name that belongs to a 
    particular feature authority. For example, the NWIS web service uses the 
    USGS feature naming authority, which is composed of site codes. When 
    observed='X' and predicted='Y' is declared, it means 'pair observed data 
    for feature name X with predicted data for feature name Y.'"
    type: object
    additionalProperties: false
    properties:
      observed:
        anyOf:
          - "$ref": "#/definitions/FeatureTupleFull"
          - type: string
            minLength: 1
            maxLength: 32
      predicted:
        anyOf:
          - "$ref": "#/definitions/FeatureTupleFull"
          - type: string
            minLength: 1
            maxLength: 32
      baseline:
        anyOf:
          - "$ref": "#/definitions/FeatureTupleFull"
          - type: string
            minLength: 1
            maxLength: 32

  FeatureTupleFull:
    title: A feature tuple with additional properties
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 32
      wkt:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - name

  FeatureGroup:
    title: A group of geospatial feature tuples
    description: "A group of feature tuples, such as all features within a 
    geospatial region."
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 98
      features:
        type: array
        items:
          "$ref": "#/definitions/Feature"
        uniqueItems: true
    required:
      - features

  FeatureService:
    description: "A feature service from which feature tuples may be acquired. 
    One way to use a feature service is to fill in missing feature names among 
    explicitly declared features. Another way is to acquire groups of features 
    within a declared region."
    anyOf:
      - "$ref": "#/definitions/SingletonFeatureService"
      - "$ref": "#/definitions/MultiGroupFeatureService"

  SingletonFeatureService:
    title: A feature service with up to one feature group.
    type: object
    additionalProperties: false
    properties:
      uri:
        type: string
        minLength: 1
        maxLength: 2083
      group:
        type: string
        minLength: 1
        maxLength: 2083
      value:
        type: string
        minLength: 1
        maxLength: 2083
      pool:
        description: "Whether to pool together all the features in the group or 
        evaluate them separately"
        type: boolean
    required:
      - uri

  MultiGroupFeatureService:
    title: A feature service with up to many feature groups.
    type: object
    additionalProperties: false
    properties:
      uri:
        type: string
        minLength: 1
        maxLength: 2083
      groups:
        type: array
        items:
          "$ref": "#/definitions/FeatureServiceGroup"
        minItems: 1
    required:
      - uri

  SourceInterfaceParameter:
    title: A key-value pair that represents a source interface parameter.
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 2083
      value:
        type: string
        minLength: 1
        maxLength: 2083

  FeatureServiceGroup:
    title: The declaration of a feature group to acquire from a feature service.
    type: object
    additionalProperties: false
    properties:
      group:
        type: string
        minLength: 1
        maxLength: 2083
      value:
        type: string
        minLength: 1
        maxLength: 2083
      pool:
        type: boolean
    required:
      - group
      - value

  SpatialMask:
    title: A geospatial mask.
    description: "A geospatial mask based on a WKT shape. Features contained 
    within this mask will be evaluated. Features that fall outside this mask 
    will not be evaluated. Currently, the mask is only used for gridded 
    evaluations. The mask may be declared as a simple WKT string or as a named 
    region with other properties."
    oneOf:
      - type: string
        minLength: 1
      - "$ref": "#/definitions/NamedSpatialMask"

  NamedSpatialMask:
    title: A geospatial mask based on a WKT shape and optional name.
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 2083
      wkt:
        type: string
        minLength: 1
      srid:
        description: "Spatial Reference System Identifier (SRID). See:
        https://en.wikipedia.org/wiki/Spatial_reference_system
        For example, WGS84 has a SRID of 4326."
        type: integer
    required:
      - wkt

  AnalysisTimes:
    title: The durations to consider when evaluating model analyses.
    type: object
    additionalProperties: false
    properties:
      minimum:
        type: integer
      maximum:
        type: integer
      unit:
        "$ref": "#/definitions/DurationEnum"
    required:
      - unit

  Dates:
    title: The date constraints on an evaluation.
    type: object
    additionalProperties: false
    properties:
      minimum:
        type: string
        format: date-time
      maximum:
        type: string
        format: date-time

  LeadTimes:
    title: The lead time constraints on an evaluation.
    type: object
    additionalProperties: false
    properties:
      minimum:
        type: integer
      maximum:
        type: integer
      unit:
        "$ref": "#/definitions/DurationEnum"
    required:
      - unit

  TimePools:
    title: The temporal boundaries of a pool of data to evaluate.
    description: "The declaration of a regular sequence of time pools. Each 
    pool contains an interval of times whose corresponding pairs will be pooled 
    together when calculating statistics. The regular sequence contains pools 
    that are as wide as the period and as frequent as the frequency, both in 
    the same time units, which are prescribed."
    type: object
    additionalProperties: false
    properties:
      period:
        type: integer
        minimum: 0
      frequency:
        type: integer
        minimum: 1
      unit:
        "$ref": "#/definitions/DurationEnum"
    required:
      - period
      - unit

  SeasonFilter:
    title: A season filter.
    description: "A filter to only include pairs whose datetimes fall within 
    a prescribed season."
    type: object
    additionalProperties: false
    properties:
      minimum_month:
        type: integer
        minimum: 1
        maximum: 12
      minimum_day:
        type: integer
        minimum: 1
        maximum: 31
      maximum_month:
        type: integer
        minimum: 1
        maximum: 12
      maximum_day:
        type: integer
        minimum: 1
        maximum: 31

  ValueFilter:
    title: A value filter.
    description: "A filter to include only those paired values that fall 
    between a minimum and a maximum."
    type: object
    additionalProperties: false
    properties:
      minimum:
        type: number
      maximum:
        type: number
      below_minimum:
        type: number
      above_maximum:
        type: number
    required:

  EnsembleFilter:
    title: A filter for ensemble forecast values.
    description: "The ensemble filter can be used to filter time-series based
     upon ensemble trace names. The mapping between the member names and the 
     time-series is source format dependent. For example, the name will filter 
     against the ensembleMemberIndex for PI-XML and the zero-based integer 
     index of the ensemble trace for National Water Model NetCDF sources (and 
     sources with no trace names). If the exclude flag is set to true, then the 
     settings identify the time series to exclude; otherwise it specifies the 
     time-series to include."
    type: object
    additionalProperties: false
    properties:
      members:
        anyOf:
          - type: string
            minLength: 1
            maxLength: 72
          - type: integer
          - type: array
            items:
              anyOf:
                - type: string
                  minLength: 1
                  maxLength: 72
                - type: integer
            minItems: 1
      exclude:
        type: boolean
    required:
      - members

  PairFrequency:
    title: The temporal frequency at which pairs should be created.
    description: "The frequency with which pairs should be included. Use this 
    to 'thin' the paired data in time."
    type: object
    additionalProperties: false
    properties:
      period:
        type: integer
        minimum: 1
      unit:
        "$ref": "#/definitions/DurationEnum"
    required:
      - period
      - unit

  UnitAlias:
    title: A measurement unit alias.
    description: "A mapping between known UCUM units and informal unit names. 
    Declares that the value for 'alias' should be interpreted as the value for 
    'unit' by the software. The 'unit' should be a UCUM unit and hence 
    parseable by the indriya measurement units library. For example, 'mm/s' is 
    parseable but 'millimeters per second' is not. To treat 'millimeters per 
    second' as 'mm/s', set the alias to 'millimeters per second' and the unit 
    to 'mm/s'."
    type: object
    additionalProperties: false
    properties:
      unit:
        type: string
        minLength: 1
        maxLength: 2083
      alias:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - alias
      - unit
          
  Quantiles:
    title: Quantile statistics.
    description: Quantile statistics for a variable.
    type: object
    additionalProperties: false
    properties:
      name:
        const: "quantiles"
      probabilities:
        "$ref": "#/definitions/QuantilesList"
    required:
      - name

  Histogram:
    title: Histogram statistics.
    description: Histogram statistics for a variable.
    type: object
    additionalProperties: false
    properties:
      name:
        const: "histogram"
      bins:
        type: integer
        minimum: 2
    required:
      - name       

  Thresholds:
    title: An ordinary set of thresholds.
    description: "An ordinary set of thresholds whose values are in prescribed 
    units, else evaluation units."
    anyOf:
      # Thresholds with attributes
      - "$ref": "#/definitions/ElaboratedThresholds"
      # A list of thresholds with attributes
      - type: array
        items:
          "$ref": "#/definitions/ElaboratedThresholds"
        minItems: 1
        uniqueItems: true
      # Plain thresholds
      - type: array
        items:
          type: number
        minItems: 1
        uniqueItems: true
      # Single number
      - type: number
    required:

  ElaboratedThresholds:
    title: Thresholds with parameters.
    description: "A single set of thresholds with with additional parameters."
    type: object
    additionalProperties: false
    properties:
      values:
        anyOf:
          - type: array
            items:
              "$ref": "#/definitions/Threshold"
            minItems: 1
            uniqueItems: true
          - type: number
      operator:
        "$ref": "#/definitions/ThresholdOperatorEnum"
      apply_to:
        "$ref": "#/definitions/ThresholdDataTypeEnum"
      feature_name_from:
        "$ref": "#/definitions/ObservedPredictedOrBaselineEnum"
      name:
        type: string
        minLength: 1
        maxLength: 2083
      unit:
        type: string
    required:
      - values

  Threshold:
    title: An ordinary threshold.
    anyOf:
      # A value threshold with a feature
      - "$ref": "#/definitions/FeaturedThreshold"
      # A plain value threshold
      - type: number

  FeaturedThreshold:
    title: A value threshold with an optional feature.
    type: object
    additionalProperties: false
    properties:
      value:
        type: number
      feature:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - value

  ProbabilityThresholds:
    title: A set of probability thresholds.
    anyOf:
      # Thresholds with attributes
      - "$ref": "#/definitions/ElaboratedProbabilityThresholds"
      # A list of thresholds with attributes
      - type: array
        items:
          "$ref": "#/definitions/ElaboratedProbabilityThresholds"
        minItems: 1
        uniqueItems: true
      # Plain thresholds
      - type: array
        items:
          type: number
          minimum: 0.0
          maximum: 1.0
        minItems: 1
        uniqueItems: true
      # Single number
      - type: number
    required:

  ElaboratedProbabilityThresholds:
    title: Probability thresholds with parameters.
    description: "A single set of probability thresholds with additional 
    parameters."
    type: object
    additionalProperties: false
    properties:
      values:
        anyOf:
          - type: array
            items:
              "$ref": "#/definitions/ProbabilityThreshold"
            minItems: 1
            uniqueItems: true
          - type: number
            minimum: 0.0
            maximum: 1.0
      operator:
        "$ref": "#/definitions/ThresholdOperatorEnum"
      apply_to:
        "$ref": "#/definitions/ThresholdDataTypeEnum"
      feature_name_from:
        "$ref": "#/definitions/ObservedPredictedOrBaselineEnum"
      name:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - values

  ProbabilityThreshold:
    title: A probability threshold.
    anyOf:
      # A probability threshold with a feature
      - "$ref": "#/definitions/FeaturedProbabilityThreshold"
      # A plain probability threshold
      - type: number
        minimum: 0
        maximum: 1.0

  FeaturedProbabilityThreshold:
    title: A probability threshold with an optional feature.
    type: object
    additionalProperties: false
    properties:
      value:
        type: number
        minimum: 0.0
        maximum: 1.0
      feature:
        type: string
        minLength: 1
        maxLength: 2083
    required:
      - value

  ThresholdSet:
    title: A list of threshold sets that provide hooks for anchors/references.
    description: "A list of threshold sets to be used for the most complex 
    thresholding problems whereby multiple thresholds of the same type are 
    required in a single evaluation and different sets of thresholds are 
    required for different metrics. In this situation, threshold sets provide a 
    hook for anchors and references so that thresholds don't need to be 
    repeated for every metric that requires a common subset of thresholds."
    type: object
    additionalProperties: false
    properties:
      thresholds:
        "$ref": "#/definitions/Thresholds"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      classifier_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"

  ThresholdSource:
    title: References to thresholds from external sources.
    description: References to one or more external sources of threshold values.
    type: object
    additionalProperties: false
    properties:
      uri:
        type: string
        minLength: 1
        maxLength: 2083
      operator:
        "$ref": "#/definitions/ThresholdOperatorEnum"
      apply_to:
        "$ref": "#/definitions/ThresholdDataTypeEnum"
      type:
        "$ref": "#/definitions/ThresholdTypeEnum"
      provider:
        type: string
        minLength: 1
        maxLength: 2083
      rating_provider:
        type: string
        minLength: 1
        maxLength: 2083
      parameter:
        type: string
        minLength: 1
        maxLength: 2083
      missing_value:
        type: number
      unit:
        type: string
        minLength: 1
        maxLength: 2083
      feature_name_from:
        "$ref": "#/definitions/ObservedPredictedOrBaselineEnum"
    required:
      - uri

  MetricWithParameters:
    title: A metric with parameters.
    type: object
    additionalProperties: false
    properties:
      name:
        "$ref": "#/definitions/MetricEnum"
      thresholds:
        "$ref": "#/definitions/Thresholds"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      svg:
        type: boolean
      png:
        type: boolean
    required:
      - name

  CategoricalMetricWithParameters:
    title: A metric with parameters for categorical datasets.
    type: object
    additionalProperties: false
    properties:
      name:
        "$ref": "#/definitions/CategoricalMetricEnum"
      thresholds:
        "$ref": "#/definitions/Thresholds"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      classifier_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      minimum_sample_size:
        type: integer
        minimum: 1
      ensemble_average:
        "$ref": "#/definitions/EnsembleAverageEnum"
      svg:
        type: boolean
      png:
        type: boolean
    required:
      - name

  SingleValuedMetricWithParameters:
    title: A metric with parameters for single-valued datasets.
    type: object
    additionalProperties: false
    properties:
      name:
        "$ref": "#/definitions/SingleValuedMetricEnum"
      thresholds:
        "$ref": "#/definitions/Thresholds"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      minimum_sample_size:
        type: integer
        minimum: 1
      ensemble_average:
        "$ref": "#/definitions/EnsembleAverageEnum"
      svg:
        type: boolean
      png:
        type: boolean
    required:
      - name

  TimeSeriesMetricWithParameters:
    title: A metric with parameters for time-series datasets.
    type: object
    additionalProperties: false
    properties:
      name:
        "$ref": "#/definitions/TimeSeriesMetricEnum"
      thresholds:
        "$ref": "#/definitions/Thresholds"
      probability_thresholds:
        "$ref": "#/definitions/ProbabilityThresholds"
      minimum_sample_size:
        type: integer
      summary_statistics:
        type: array
        items:
          "$ref": "#/definitions/SummaryStatisticsEnum"
        minItems: 1
        uniqueItems: true
    required:
      - name

  # Format. A facade that supports a parameterized declaration 
  # of a format without parameters. Reduces friction for users.
  FormatWithoutParameters:
    type: object
    additionalProperties: false
    properties:
      format:
        "$ref": "#/definitions/FormatEnum"
    required:
      - format

  GraphicFormatWithParameters:
    title: A graphics format with optional parameters.
    type: object
    additionalProperties: false
    properties:
      format:
        "$ref": "#/definitions/GraphicFormatEnum"
      orientation:
        "$ref": "#/definitions/OrientationEnum"
      # Both rasters and vectors can have width/height
      width:
        type: integer
        minimum: 400
      height:
        type: integer
        minimum: 300
    required:
      - format

  NetcdfFormatWithParameters:
    title: A NetCDF format with optional parameters.
    type: object
    additionalProperties: false
    properties:
      format:
        "$ref": "#/definitions/NetcdfFormatEnum"
      template_path:
        type: string
        minLength: 1
        maxLength: 2083
      variable_name:
        type: string
        minLength: 1
        maxLength: 2083
      gridded:
        type: boolean
    required:
      - format

  # These values are intentionally convertible to java.time.temporal.ChronoUnit
  # values. Please only add values to this enum that are listed in
  # java.time.temporal.ChronoUnit. Also note: we define an "instant" as 1
  # minute or less.
  DurationEnum:
    type: string
    enum:
      - seconds
      - minutes
      - hours
      - days

  # The source interface serves as a shorthand to tell WRES how to get a
  # dataset from a particular URI. It can mean the API structure of a web
  # service such as the USGS NWIS, or it can mean the path/resource structure
  # of a model dataset. Whatever structure is on top of a URI that cannot be
  # automatically discerned from the URI or data within that URI is summarized
  # by one of these short-hands and must be specified.
  SourceInterfaceEnum:
    title: The interfaces associated with time-series data sources.
    type: string
    enum:
      - wrds ahps
      - wrds obs
      - wrds nwm
      - usgs nwis
      - nwm short range channel rt conus
      - nwm short range channel rt hawaii
      - nwm short range no da channel rt hawaii
      - nwm short range channel rt puertorico
      - nwm short range no da channel rt puertorico
      - nwm medium range ensemble channel rt conus
      - nwm medium range deterministic channel rt conus
      - nwm medium range ensemble channel rt conus hourly
      - nwm medium range deterministic channel rt conus hourly
      - nwm medium range no da deterministic channel rt conus
      - nwm analysis assim channel rt conus
      - nwm analysis assim no da channel rt conus
      - nwm analysis assim extend channel rt conus
      - nwm analysis assim extend no da channel rt conus
      - nwm analysis assim channel rt hawaii
      - nwm analysis assim no da channel rt hawaii
      - nwm analysis assim channel rt puertorico
      - nwm analysis assim no da channel rt puertorico
      - nwm long range channel rt conus
      - nwm short range channel rt alaska
      - nwm medium range ensemble channel rt alaska
      - nwm medium range deterministic channel rt alaska
      - nwm medium range no da deterministic channel rt alaska
      - nwm analysis assim channel rt alaska
      - nwm analysis assim no da channel rt alaska
      - nwm analysis assim extend channel rt alaska
      - nwm analysis assim extend no da channel rt alaska

  FeatureAuthorityEnum:
    type: string
    title: The supported naming authorities for geospatial features.
    enum:
      - nws lid
      - usgs site code
      - nwm feature id
      - custom

  ObservedPredictedOrBaselineEnum:
    type: string
    enum:
      - observed
      - predicted
      - baseline

  TimeScaleFunctionEnum:
    type: string
    enum:
      - total
      - mean
      - minimum
      - maximum

  TimeScaleLenienceEnum:
    title: The lenience to apply when rescaling time-series.
    description: "The side(s) of data where lenience should be applied when 
    rescaling time-series. Provides additional control over the treatment of 
    missing data or data whose valid times are at irregular intervals. A value 
    of 'all' indicates lenience with respect to all sides, 'none' indicates 
    lenience with respect to no sides, and the other instances name particular 
    sides or combinations of sides. When undefined or 'none', rescaling is only
    performed for intervals that contain regularly spaced events with no
    missing values."
    type: string
    enum:
      - all
      - none
      - observed
      - predicted
      - baseline
      - predicted and baseline
      - observed and baseline
      - observed and predicted

  CrossPairEnum:
    title: The cross-pairing methodology.
    description: "Controls cross-pairing of time-series. If one of these options 
    is present, evaluates common events by reference time and valid time. If 
    absent, retains all events of each type. With fuzzy matching, each time-
    series is matched with its nearest, corresponding, time-series according to 
    the total duration between all reference times of a corresponding type. In 
    other words, if there is an exact match, that will be used, else the time-
    series whose reference times are nearest overall. Once a time-series has 
    been matched, it cannot be re-used. Always uses exact matching for valid 
    times. The scope of the cross-pairing always includes the predicted and 
    baseline datasets, where defined, and may be further controlled using the 
    'scope' parameter."
    type: string
    enum:
      - exact
      - fuzzy

  CrossPairScopeEnum:
    title: The scope of cross-pairing.
    description: "Controls the scope of cross-pairing. When applied 'within 
    features', only those time-series with a common geographic feature will be 
    cross-paired with each other. When applied 'across features', all of the 
    time-series within a feature group will be cross-paired with each other and 
    only those time-series and associated events retained that are present for 
    all geographic features."
    type: string
    enum:
      - within features
      - across features

  EnsembleAverageEnum:
    title: The ensemble averaging function.
    description: "The name of a function that converts an ensemble of values 
    into a single value."
    type: string
    enum:
      - mean
      - median

  GeneratedBaselineEnum:
    title: The options for generated baselines.
    description: "The name of a baseline that can be generated automatically by 
    the software."
    type: string
    enum:
      - persistence
      - climatology

  MetricEnum:
    title: A big bucket of metrics that all accept the same parameters.
    type: string
    enum:
      - box plot of errors by observed value
      - box plot of errors by forecast value
      - brier score
      - brier skill score
      - contingency table
      - continuous ranked probability score
      - continuous ranked probability skill score
      - ensemble quantile quantile diagram
      - maximum
      - mean
      - minimum
      - rank histogram
      - relative operating characteristic diagram
      - relative operating characteristic score
      - reliability diagram
      - sample size
      - standard deviation

  TimeSeriesMetricEnum:
    title: Time-series metrics.
    type: string
    enum:
      - time to peak relative error
      - time to peak error

  CategoricalMetricEnum:
    title: Categorical metrics.
    type: string
    enum:
      - contingency table
      - threat score
      - equitable threat score
      - frequency bias
      - probability of detection
      - probability of false detection
      - false alarm ratio
      - peirce skill score

  SingleValuedMetricEnum:
    title: Single-valued metrics.
    type: string
    enum:
      - bias fraction
      - box plot of errors
      - box plot of percentage errors
      - coefficient of determination
      - pearson correlation coefficient
      - index of agreement
      - kling gupta efficiency
      - mean absolute error
      - mean error
      - mean square error
      - mean square error skill score
      - mean square error skill score normalized
      - median error
      - quantile quantile diagram
      - root mean square error
      - root mean square error normalized
      - sample size
      - sum of square error
      - volumetric efficiency
      - mean absolute error skill score

  FormatEnum:
    title: The statistics serialization formats.
    type: string
    enum:
      - csv
      - csv2
      - png
      - svg
      - netcdf
      - netcdf2
      - pairs
      - protobuf

  GraphicFormatEnum:
    title: The graphics serialization formats.
    type: string
    enum:
      - png
      - svg

  NetcdfFormatEnum:
    type: string
    enum:
      - netcdf

  OrientationEnum:
    title: The orientation to use when organizing data for format writing.
    type: string
    enum:
      - lead threshold
      - threshold lead

  SummaryStatisticsEnum:
    type: string
    enum:
      - mean
      - median
      - minimum
      - maximum
      - standard deviation
      - mean absolute

  SummaryStatisticsWithParametersEnum:
    type: string
    enum:
      - quantiles
      - histogram
      - box plot

  ThresholdDataTypeEnum:
    type: string
    enum:
      - observed
      - predicted
      - observed and predicted
      - any predicted
      - observed and any predicted
      - predicted mean
      - observed and predicted mean

  ThresholdTypeEnum:
    type: string
    enum:
      - probability
      - value
      - classifier

  ThresholdOperatorEnum:
    type: string
    enum:
      - equal
      - greater
      - greater equal
      - less
      - less equal

  SummaryStatisticDimensionsEnum:
    type: string
    enum:
      - features
      - feature groups

  # Originally, this type was used to direct ingest to either a set of
  # "forecast" or "observation" tables in the database. See discussion in
  # ticket #57301 for making it optional or removing it altogether. It should
  # become optional, but improvements in #65216 can change the purpose of this
  # declaration to be used to direct treatment of the dataset after ingest, for
  # example to treat analyses differently from forecasts on retrieval. That is
  # the reason for adding "analyses" here. Equally, the type can be inferred
  # from the other declaration present in most cases, else from the ingested
  # data, so the type should become optional or potentially even deprecated.
  DataTypeEnum:
    title: The type of time-series dataset.
    description: "Use this to clarify the type of time-series data, where 
    required. In general, this is not required because it can be inferred from 
    the other declaration present or from the time-series data, once ingested."
    type: string
    enum:
      - ensemble forecasts
      - single valued forecasts
      - observations
      - simulations
      - analyses
