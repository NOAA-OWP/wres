<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
           jaxb:version="2.1"
           elementFormDefault="qualified">

    <xs:simpleType name="datasourceType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ensemble forecasts" />
            <xs:enumeration value="simple forecasts" />
            <xs:enumeration value="observations" />
            <xs:enumeration value="assimilations" />
            <xs:enumeration value="model outputs" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="format">
        <xs:restriction base="xs:string">
            <xs:enumeration value="PI-XML" />
            <xs:enumeration value="netCDF" />
            <xs:enumeration value="datacard" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="ensembleCondition">
        <xs:attribute name="label" type="xs:string" />
        <xs:attribute name="name" type="xs:string" />
        <xs:attribute name="member_id" type="xs:string" />
        <xs:attribute name="qualifier" type="xs:string" />
        <xs:attribute name="exclude" type="xs:boolean" default="false" />
    </xs:complexType>

    <xs:complexType name="conditions">
        <xs:sequence>
            <xs:element name="dates" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <!-- xs:dateTime ends up being yucky XMLGregorianCalendar. Use string, let app deal with it. -->
                    <xs:attribute name="earliest" type="xs:string" />
                    <xs:attribute name="latest" type="xs:string" />
                </xs:complexType>
            </xs:element>
            <xs:element name="issuedDates" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:attribute name="earliest" type="xs:string" />
                    <xs:attribute name="latest" type="xs:string" />
                </xs:complexType>
            </xs:element>
            <!-- values min and max will take from the pair target unit? -->
            <xs:element name="values" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:attribute name="minimum" type="xs:double" />
                    <xs:attribute name="maximum" type="xs:double" />
                </xs:complexType>
            </xs:element>

            <xs:element name="feature" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="label" type="xs:string" />
                    <xs:attribute name="lid" type="xs:string" />
                    <xs:attribute name="comid" type="xs:long" />
                    <xs:attribute name="gage_id" type="xs:string" />
                    <xs:attribute name="huc" type="xs:string" />
                    <xs:attribute name="name" type="xs:string" />
                    <xs:attribute name="exclude" type="xs:boolean" default="false" />
                </xs:complexType>
            </xs:element>

            <!-- idea here is mask is a WKT, or optionally a filename,
                 so you could do either:
                 <mask file="file:///my/file.shp" />
                 OR
                 <mask>poly( whatever well-known-text )</mask> -->
            <xs:element name="mask" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="file" type="xs:anyURI" />
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="datasource">

        <!-- for class naming using xjc-->
        <xs:annotation>
            <xs:appinfo>
                <jaxb:class name="DataSourceConfig" />
            </xs:appinfo>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="type" type="datasourceType" />

            <xs:element name="source" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:anyURI">
                            <xs:attribute name="format" type="format" />
                            <xs:attribute name="unit" type="xs:string" />
                            <xs:attribute name="location" type="xs:string" />
                            <xs:attribute name="zoneOffset" type="xs:string" />
                            <xs:attribute name="missingValue" type="xs:string" />
                            <xs:attribute name="all" type="xs:boolean" />
                            <xs:attribute name="recursive" type="xs:boolean" />
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="variable">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="label" type="xs:string" />
                            <xs:attribute name="unit" type="xs:string" />
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>

            <xs:element name="ensemble" type="ensembleCondition" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="rollingTimeAggregation" type="rollingTimeAggregation" minOccurs="0" maxOccurs="1" />
            <xs:element name="arbitraryFunctionToApplyToValues" type="xs:string" minOccurs="0" maxOccurs="1" />
            <xs:element name="timeShift" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="period" type="timePeriod" />
                        <xs:element name="direction" type="direction" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

        </xs:sequence>

        <xs:attribute name="label" type="xs:string" />
    </xs:complexType>

    <xs:simpleType name="direction">
        <xs:restriction base="xs:string">
            <xs:enumeration value="backward" />
            <xs:enumeration value="forward" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="metric">

        <!-- for class naming using xjc-->
        <xs:annotation>
            <xs:appinfo>
                <jaxb:class name="MetricConfig" />
            </xs:appinfo>
        </xs:annotation>

        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="label" type="xs:string" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="destinationType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="numeric" />
            <xs:enumeration value="graphic" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="destination">

        <!-- for class naming using xjc-->
        <xs:annotation>
            <xs:appinfo>
                <jaxb:class name="DestinationConfig" />
            </xs:appinfo>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="config" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:any processContents="skip" namespace="##any" minOccurs="0" maxOccurs="unbounded" />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>

        <xs:attribute name="type" type="destinationType" />
    </xs:complexType>

    <xs:simpleType name="timeAggregationFunction">
        <xs:restriction base="xs:string">
            <xs:enumeration value="sum" />
            <xs:enumeration value="mean" />
            <xs:enumeration value="ending" />
            <xs:enumeration value="max" />
            <xs:enumeration value="min" />
            <xs:enumeration value="median" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="timePeriod">
        <xs:restriction base="xs:string">
            <xs:enumeration value="hour" />
            <xs:enumeration value="threeHour" />
            <xs:enumeration value="sixHour" />
            <xs:enumeration value="twelveHour" />
            <xs:enumeration value="day" />
            <xs:enumeration value="week" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="rollingTimeAggregation">

        <!-- for class naming using xjc-->
        <xs:annotation>
            <xs:appinfo>
                <jaxb:class name="RollingTimeAggregationConfig" />
            </xs:appinfo>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="function" type="timeAggregationFunction" />
            <!-- frequncy is the pair period -->
            <!--<xs:element name="frequency" type="timePeriod" /> -->
            <xs:element name="duration" type="timePeriod" />
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" />
    </xs:complexType>

    <xs:simpleType name="spaceAggregationFunction">
        <xs:restriction base="xs:string">
            <xs:enumeration value="scale" />
        </xs:restriction>
    </xs:simpleType>


    <xs:complexType name="spaceAggregation">

        <!-- for class naming using xjc-->
        <xs:annotation>
            <xs:appinfo>
                <jaxb:class name="SpaceAggregationConfig" />
            </xs:appinfo>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="function" type="spaceAggregationFunction" />
            <xs:element name="parameters" type="xs:string" />
        </xs:sequence>

        <xs:attribute name="label" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="pair">

        <!-- for class naming using xjc-->
        <xs:annotation>
            <xs:appinfo>
                <jaxb:class name="PairConfig" />
            </xs:appinfo>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="unit" type="xs:string" />
            <xs:element name="grouping" type="xs:string" minOccurs="0" maxOccurs="1" />
            <xs:element name="period" type="timePeriod" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" />
    </xs:complexType>

    <xs:complexType name="dragons">
        <xs:annotation>
            <xs:appinfo>
                <jaxb:class name="DragonsConfig" />
            </xs:appinfo>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="fullIngest" type="xs:boolean" minOccurs="0" maxOccurs="1" />
            <xs:element name="overwriteOldData" type="xs:boolean" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="label" type="xs:string" />
    </xs:complexType>

    <xs:element name="project">
        <xs:complexType>

            <!-- for class naming using xjc-->
            <xs:annotation>
                <xs:appinfo>
                    <jaxb:class name="ProjectConfig" />
                </xs:appinfo>
            </xs:annotation>

            <xs:sequence>

                <xs:element name="inputs">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="left" type="datasource" />
                            <xs:element name="right" type="datasource" />
                            <xs:element name="baseline" type="datasource" minOccurs="0" maxOccurs="1" />
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>

                <xs:element name="conditions" type="conditions" minOccurs="0" maxOccurs="1" />

                <xs:element name="pair" type="pair"/>

                <xs:element name="outputs">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="metric" type="metric" minOccurs="0" maxOccurs="unbounded"/>
                            <xs:element name="destination" type="destination" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>

                <xs:element name="hereBeDragons" type="dragons" minOccurs="0" maxOccurs="1" />
            </xs:sequence>

            <xs:attribute name="label" type="xs:string" />

        </xs:complexType>
    </xs:element>

</xs:schema>
