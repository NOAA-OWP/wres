subprojects
{
    apply plugin: 'java'

	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

    sourceSets
    {
        main
        {
            java
            {
                srcDirs = ['src']
            }
            // The downside with resources is that xml ends up INSIDE jar file
            // (haven't found simple workaround yet)
            resources
            {
                srcDirs = ['nonsrc']
            }
        }
        test
        {
        	java
        	{
        		srcDirs = ['test']
        	}
        }
    }

    repositories
    {
        mavenCentral()
        maven 
        {
            url "https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/"
        }
    }

    test
    {
        maxHeapSize = "3072m"
        testLogging.showStandardStreams = true
    }

}

project(':utilities')
{
	dependencies
	{
        // maybe with some adjustments we can put logback
        // into runtime with slf4j in compile, but for now:
        //compile 'org.slf4j:slf4j-api:1.7.25'

        compile 'ch.qos.logback:logback-classic:1.2.3'
        compile 'ch.qos.logback:logback-core:1.2.3'
        compile(group: 'edu.ucar', name: 'cdm', version: '4.6.9')
        {
            // because we are getting a later version from diff group:
            exclude group: 'c3p0', module: 'c3p0'
        }

        testCompile 'junit:junit:4.12'
        testCompile files('../libs/external/EVS.jar')
	}
}


project(':wres-datamodel-api')
{
	dependencies
    {
        testCompile 'junit:junit:4.12'
    }

    jar
    {
        exclude('gov/noaa/wres/datamodel/**/*Impl*')
    }
}

project(':wres-core')
{
    apply plugin: 'application'
    mainClassName = 'Main'

    applicationDefaultJvmArgs = ['-Xmx3500m']

    dependencies
    {
        compile project(':utilities')
        compile project(':wres-datamodel-api')
        runtime project(':wres-datamodel')

        compile 'org.slf4j:slf4j-api:1.7.25'

        compile('edu.ucar:cdm:4.6.8')
        {
            // because we are getting a later version from diff group:
            exclude group: 'c3p0', module: 'c3p0'
        }

        // to use native postgres copy, need this on compile, otherwise runtime
        compile 'org.postgresql:postgresql:42.0.0'

		// connection pooling:
		compile 'com.mchange:c3p0:0.9.5.2'

        //JB @ 02/16/17
        testCompile group: 'com.google.guava', name: 'guava-testlib', version: '21.0'
    }

    // Allows this:
    // gradlew run -PappArgs="['saveForecast','/path/to/file']"
    run
    {
        if (project.hasProperty("appArgs"))
        {
            args Eval.me(appArgs)
        }
        // Allow profiling during run
        //jvmArgs = ['-agentlib:hprof=cpu=samples,interval=5,depth=25']
    }

}

project(':wres-datamodel')
{
    dependencies
    {
        compile project(':wres-datamodel-api')
        compile project(':wres-io')

        compile 'org.slf4j:slf4j-api:1.7.25'

        runtime project(':wres-datamodel')
        runtime 'ch.qos.logback:logback-classic:1.2.3'

        testCompile 'junit:junit:4.12'
    }
}

project(':wres-experiment')
{
    dependencies
    {
        compile group: 'edu.ucar', name: 'cdm', version: '4.6.8'
        compile group: 'com.google.guava', name: 'guava-testlib', version: '21.0'

        //JB @ 02/16/17
        testCompile 'junit:junit:4.12'
    }
}

project(':wres-io')
{
    dependencies
    {
    	compile('edu.ucar:cdm:4.6.8')
        {
            // because we are getting a later version from diff group:
            exclude group: 'c3p0', module: 'c3p0'
        }

        // to use native postgres copy, need this on compile, otherwise runtime
        compile 'org.postgresql:postgresql:42.0.0'

		// connection pooling:
		compile 'com.mchange:c3p0:0.9.5.2'

    }
}
