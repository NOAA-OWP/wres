<?xml version="1.0" encoding="UTF-8"?>
<wresconfig>
    <database>
        <!-- When a jdbcUrl is specified, it overrides host, type, name, port.
             Use either jdbcUrl or host. If you're using url, change to host
             instead. To try h2 in-memory db, uncomment the following line. -->
        <!--  <jdbcUrl>jdbc:h2:mem:test;MODE=PostgreSQL;TRACE_LEVEL_FILE=4;DB_CLOSE_DELAY=-1;INIT=create schema if not exists wres\;</jdbcUrl> -->
        <host>localhost</host>
        <username>wres_user</username>
        <name>wres</name>
        <port>5432</port>
        <database_type>postgresql</database_type>
        <max_idle_time>80</max_idle_time>
        <!-- Important: the sum of the max_pool_size settings of WRES instances
                 that connect to a shared database instance must be equal to or
                 less than the database instance's maximum connection settings 
                 else the WRES instances will see gnarly-looking exceptions 
                 such as "org.postgresql.util.PSQLException: FATAL: remaining 
                 connection slots are reserved for non-replication superuser 
                 connections" -->
        <max_pool_size>8</max_pool_size>
        <use_ssl>true</use_ssl>
        <certificate_file_to_trust>classpath:DODSWCA_60.pem</certificate_file_to_trust>
    </database>
    <!-- Maximum number of threads used for reading. However, this depends on 
         the type of data source. Notably, there is a separate thread count for 
         reading tarred archives (maximum_archive_threads) and web sources 
         (maximum_web_client_threads). In that case, a reader thread merely 
         dispatches the reading work to be conducted by another thread pool. 
         For example, if there is a tarred archive on each of the left, right 
         and baseline sides, then three reading threads will dispatch work for 
         tarred reading and each tarred archive will use as many threads as 
         maximum_archive_threads. --> 
    <maximum_read_threads>7</maximum_read_threads>
    <!-- Maximum number of ingest threads, which is mainly relevant when 
         ingesting time-series into a persistent store, such as a database. In 
         that case, it should be set alongside the maximum_read_threads and the 
         database connection pool settings, notably the max_pool_size. In this 
         sequence, the rate of reading will depend on the rate of ingest, which 
         will in turn depend on the latency of the persistent store, including 
         the number of connections allowed. --> 
    <maximum_ingest_threads>7</maximum_ingest_threads>
    <maximum_web_client_threads>6</maximum_web_client_threads>
    <!-- The maximum number of threads to use when reading a single tarred
         archive. -->
    <maximum_archive_threads>5</maximum_archive_threads>
    <!-- The maximum number of threads used to complete pools. A pool is the 
    atomic unit of work for retrieving and evaluating statistics. -->
    <maximum_pool_threads>6</maximum_pool_threads>
    <maximum_threshold_threads>1</maximum_threshold_threads>
    <maximum_metric_threads>1</maximum_metric_threads>
    <!-- The maximum number of threads for writing statistics formats. -->
    <maximum_product_threads>5</maximum_product_threads>
    <!-- Legacy setting used to drive the number of threads for reading/ingest. -->
    <maximum_thread_count>7</maximum_thread_count>
    <fetch_size>50000</fetch_size>
    <!-- The maximum number of time-series events/rows to cache before sending
         them to the database. -->
    <maximum_copies>10000</maximum_copies>
    <update_frequency>1</update_frequency>
    <update_progress_monitor>false</update_progress_monitor>
    <!-- The minimum number of singleton feature groups at which feature-
         batched retrieval occurs. A smaller number will lead to feature-
         batched retrieval being conducted for more evaluations. The smallest 
         valid number is 0 and the largest is 2^31–1, which is the largest 
         number that can be stored in a 32-bit integer. -->
    <feature_batch_threshold>10</feature_batch_threshold>
    <!-- The number of features per retrieval when conducting feature-batched 
         retrieval. A larger number will consume more memory, but should lead 
         to faster retrieval. The smallest valid number is 1 and the largest is 
         2^31–1, which is the largest number that can be stored in a 32-bit 
         integer. -->
    <feature_batch_size>50</feature_batch_size>
</wresconfig>
