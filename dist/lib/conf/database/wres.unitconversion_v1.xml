<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd"
        objectQuotingStrategy="QUOTE_ONLY_RESERVED_WORDS">
    <changeSet id="UnitConversion1.1" author="Christopher Tubbs">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="UnitConversion" schemaName="wres" />
            </not>
        </preConditions>
        <createTable tableName="UnitConversion" schemaName="wres">
            <column name="from_unit" type="smallint" remarks="The ID of the unit to convert from" >
                <constraints nullable="false"/>
            </column>
            <column name="to_unit" type="smallint" remarks="The ID of the unit to convert to">
                <constraints nullable="false"/>
            </column>
            <column name="factor" type="DOUBLE PRECISION" defaultValue="1"
                    remarks="The multiplicative factor to modify the initial value by" >
                <constraints nullable="false" />
            </column>
            <column name="initial_offset" type="DOUBLE PRECISION" defaultValue="0"
                    remarks="A value to add to the initial value prior to multiplying by the factor">
                <constraints nullable="false" />
            </column>
            <column name="final_offset" type="DOUBLE PRECISION" defaultValue="0"
                    remarks="A final value to add after multiplying by the factor">
                <constraints nullable="false" />
            </column>
        </createTable>
        <createIndex tableName="UnitConversion" schemaName="wres" indexName="unitconversion_measurement_uix" unique="true">
            <column name="from_unit" type="smallint" />
            <column name="to_unit" type="smallint" />
        </createIndex>
        <comment>Adding identity conversions</comment>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit)
            SELECT measurementunit_id, measurementunit_id
            FROM wres.MeasurementUnit M
            WHERE NOT EXISTS (
                SELECT 1
                FROM wres.UnitConversion UC
                WHERE UC.from_unit = M.measurementunit_id
                    AND UC.to_unit = M.measurementunit_id
            );
        </sql>
        <comment>
            The wres.UnitConversion table has been created and all default identity conversions have been added.
        </comment>
    </changeSet>
    <changeSet id="Volumn and Flow UnitConversion v1.0" author="Christopher Tubbs" dbms="PostgreSQL">
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                35.3146662127
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE T.unit_name = ANY('{CFS, ft3/s}'::text[])
                AND F.unit_name = ANY('{CMS, m3 s-1, m3/s}'::text[])
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion UC
                    WHERE UC.from_unit = F.measurementunit_id
                        AND UC.to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1/35.3146662127
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{CFS, ft3/s}'::text[])
                AND T.unit_name = ANY('{CMS, m3 s-1, m3/s}'::text[])
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion UC
                    WHERE UC.from_unit = F.measurementunit_id
                        AND UC.to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{CMS, m3 s-1, m3/s}')
                AND T.unit_name = ANY('{CMS, m3 s-1, m3/s}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion UC
                    WHERE UC.from_unit = F.measurementunit_id
                        AND UC.to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{CFS, ft3/s}')
                AND T.unit_name = ANY('{CFS, ft3/s}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion UC
                    WHERE UC.from_unit = F.measurementunit_id
                        AND UC.to_unit = T.measurementunit_id
                );
        </sql>
        <comment>
            All initial unit conversions for volumn and flow have been added to the database.
        </comment>
    </changeSet>
    <changeSet id="Precipitation UnitConversions v1.0" author="Christopher Tubbs" dbms="PostgreSQL">
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{mm/s, kg/m^2s,mm s^-1, kg/m^2, kg m-2, kg m\{-2\}, kg/m^2/s}')
                AND T.unit_name = ANY('{mm/s, kg/m^2s,mm s^-1, kg/m^2, kg m-2, kg m\{-2\}, kg/m^2/s}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion UC
                    WHERE UC.from_unit = F.measurementunit_id
                        AND UC.to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{mm/h, kg/m^2h, mm h^-1, mm h-1, mm h\{-1\}, kg/m^2/h}')
                AND T.unit_name = ANY('{mm/h, kg/m^2h, mm h^-1, mm h-1, mm h\{-1\}, kg/m^2/h}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion UC
                    WHERE UC.from_unit = F.measurementunit_id
                        AND UC.to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                3600.0
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{mm/s, kg/m^2s,mm s^-1, kg/m^2, kg m-2, kg m\{-2\}, kg/m^2/s}')
                AND T.unit_name = ANY('{mm/h, kg/m^2h, mm h^-1, mm h-1, mm h\{-1\}, kg/m^2/h}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion UC
                    WHERE UC.from_unit = F.measurementunit_id
                        AND UC.to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1.0/3600.0
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{mm/h, kg/m^2h, mm h^-1, mm h-1, mm h\{-1\}, kg/m^2/h}')
                AND T.unit_name = ANY('{mm/s, kg/m^2s, kg/m^2/s,mm s^-1, kg/m^2, kg m-2, kg m\{-2\}}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion UC
                    WHERE UC.from_unit = F.measurementunit_id
                        AND UC.to_unit = T.measurementunit_id
                );
        </sql>
    </changeSet>
    <changeSet id="Distance UnitConversions v1.0" author="Christopher Tubbs" dbms="PostgreSQL">
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                3.28084
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'FT'
            WHERE F.unit_name = 'M'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.00328084
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'FT'
            WHERE F.unit_name = 'MM'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.08333333333333
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'FT'
            WHERE F.unit_name = 'IN'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                12
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'IN'
            WHERE F.unit_name = 'FT'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                39.3701
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'IN'
            WHERE F.unit_name = 'M'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.0328084
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'FT'
            WHERE F.unit_name = 'CM'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.0393701
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'IN'
            WHERE F.unit_name = 'MM'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.393701
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'IN'
            WHERE F.unit_name = 'CM'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.3048
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'M'
            WHERE F.unit_name = 'FT'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.0254
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'M'
            WHERE F.unit_name = 'IN'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.001
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'M'
            WHERE F.unit_name = 'MM'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.01
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'MM'
            WHERE F.unit_name = 'CM'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <comment>
            All initial distance unit conversions have been added to the database.
        </comment>
    </changeSet>
    <changeSet id="Time UnitConversion V1.0" author="Christopher Tubbs">
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                1.6667e-5
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'M'
            WHERE F.unit_name = 'MS'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                60
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'M'
            WHERE F.unit_name = 'HR'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                60
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'M'
            WHERE F.unit_name = 'H'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.0166667
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'M'
            WHERE F.unit_name = 'S'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                60000
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'MS'
            WHERE F.unit_name = 'M'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                3.6e6
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'MS'
            WHERE F.unit_name = 'HR'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                3.6e6
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
            ON T.unit_name = 'MS'
            WHERE F.unit_name = 'H'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                1000
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'MS'
            WHERE F.unit_name = 'S'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.0166667
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'HR'
            WHERE F.unit_name = 'M'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                2.7778e-7
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'HR'
            WHERE F.unit_name = 'MS'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'HR'
            WHERE F.unit_name = 'H'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.000277778
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'HR'
            WHERE F.unit_name = 'S'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                2.7778e-7
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'H'
            WHERE F.unit_name = 'MS'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'H'
            WHERE F.unit_name = 'HR'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.0166667
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'H'
            WHERE F.unit_name = 'M'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.000277778
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'H'
            WHERE F.unit_name = 'S'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                0.001
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'S'
            WHERE F.unit_name = 'MS'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                3600
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'S'
            WHERE F.unit_name = 'HR'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                3600
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'S'
            WHERE F.unit_name = 'H'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                60
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'S'
            WHERE F.unit_name = 'M'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <comment>
            All initial time unit conversions have been added to the database.
        </comment>
    </changeSet>
    <changeSet id="Temperature UnitConversion v1.0" author="Christopher Tubbs" dbms="PostgreSQL">
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor, initial_offset)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                (5.0 / 9.0),
                -32.0
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'C'
            WHERE F.unit_name = 'F'
            AND NOT EXISTS (
                SELECT 1
                FROM wres.UnitConversion
                WHERE from_unit = F.measurementunit_id
                    AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor, initial_offset)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                (5.0 / 9.0),
                459.67
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'K'
            WHERE F.unit_name = 'F'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor, final_offset)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                (9.0 / 5.0),
                32.0
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'F'
            WHERE F.unit_name = 'C'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                      AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor, initial_offset)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                (5.0 / 9.0),
                -32.0
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'C'
            WHERE F.unit_name = 'F'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor, initial_offset)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                (5.0 / 9.0),
                459.67
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'K'
            WHERE F.unit_name = 'F'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor, final_offset)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                (9.0 / 5.0),
                32.0
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'F'
            WHERE F.unit_name = 'C'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor, final_offset)
            SELECT  F.measurementunit_id,
                T.measurementunit_id,
                (9.0 / 5.0),
                -459.67
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'F'
            WHERE F.unit_name = 'K'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor, final_offset)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1,
                273.15
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'K'
            WHERE F.unit_name = 'C'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor, final_offset)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1,
                -273.15
            FROM wres.MeasurementUnit F
            INNER JOIN wres.MeasurementUnit T
                ON T.unit_name = 'C'
            WHERE F.unit_name = 'K'
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <comment>
            All initial temperature unit conversions have been added to the database.
        </comment>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{kg kg-1, kg kg\{-1\}}')
                AND T.unit_name = ANY('{kg kg-1, kg kg\{-1\}}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{m/s, m s\{-1\}}')
                AND T.unit_name = ANY('{m/s, m s\{-1\}}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{W/m^2, W m\{-2\}, W m-2}')
                AND T.unit_name = ANY('{W/m^2, W m\{-2\}, W m-2}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <sql>
            INSERT INTO wres.UnitConversion(from_unit, to_unit, factor)
            SELECT F.measurementunit_id,
                T.measurementunit_id,
                1
            FROM wres.MeasurementUnit F
            CROSS JOIN wres.MeasurementUnit T
            WHERE F.unit_name = ANY('{W/m^2, W m\{-2\}, W m-2}')
                AND T.unit_name = ANY('{W/m^2, W m\{-2\}, W m-2}')
                AND NOT EXISTS (
                    SELECT 1
                    FROM wres.UnitConversion
                    WHERE from_unit = F.measurementunit_id
                        AND to_unit = T.measurementunit_id
                );
        </sql>
        <comment>
            All initial misc. unit conversions have been added to the database.
        </comment>
    </changeSet>
</databaseChangeLog>